// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using beauti_salon_app.Data;

#nullable disable

namespace beauti_salon_app.Migrations
{
    [DbContext(typeof(BeautySalonContext))]
    [Migration("20251014093816_AddTopPhotoToPortfolio")]
    partial class AddTopPhotoToPortfolio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("PortfolioItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MasterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TopPhoto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("PortfolioItems");
                });

            modelBuilder.Entity("beauti_salon_app.Models.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TopMaster")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Masters");
                });

            modelBuilder.Entity("beauti_salon_app.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TopService")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("beauti_salon_app.Models.SubService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("SubServices");
                });

            modelBuilder.Entity("beauti_salon_app.Models.SubServiceMaster", b =>
                {
                    b.Property<int>("SubServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MasterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubServiceId", "MasterId");

                    b.HasIndex("MasterId");

                    b.ToTable("SubServiceMasters");
                });

            modelBuilder.Entity("PortfolioItem", b =>
                {
                    b.HasOne("beauti_salon_app.Models.Master", "Master")
                        .WithMany("PortfolioItems")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");
                });

            modelBuilder.Entity("beauti_salon_app.Models.SubService", b =>
                {
                    b.HasOne("beauti_salon_app.Models.Service", "Service")
                        .WithMany("SubServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("beauti_salon_app.Models.SubServiceMaster", b =>
                {
                    b.HasOne("beauti_salon_app.Models.Master", "Master")
                        .WithMany("SubServiceMasters")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("beauti_salon_app.Models.SubService", "SubService")
                        .WithMany("SubServiceMasters")
                        .HasForeignKey("SubServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");

                    b.Navigation("SubService");
                });

            modelBuilder.Entity("beauti_salon_app.Models.Master", b =>
                {
                    b.Navigation("PortfolioItems");

                    b.Navigation("SubServiceMasters");
                });

            modelBuilder.Entity("beauti_salon_app.Models.Service", b =>
                {
                    b.Navigation("SubServices");
                });

            modelBuilder.Entity("beauti_salon_app.Models.SubService", b =>
                {
                    b.Navigation("SubServiceMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
